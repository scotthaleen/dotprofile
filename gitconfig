[user]
  name =  {{ name }}
  email = {{ email }}

[core]
  editor = emacs

[pull]
  ff = only

[merge]
  #ff = false

[pager]
  branch = false
  stash = false
  dn = false

[web]
  browser = google-chrome

[diff]
  tool = colordiff

[alias]
  last = log -1 HEAD
  diff-last = diff HEAD^ HEAD
  diff-last-n = "!f() { git diff HEAD~$1 HEAD; }; f"
  diff-last3 = diff HEAD~3 HEAD
  ds = diff --staged
  lsm = ls-files -m
  co = checkout
  b = branch
  fco = "!f() { git fb $1 | sed 's/remotes\\/origin\\///g' | xargs git checkout; }; f"
  fcor = "!f() { git fbr | sed 's/remotes\\/origin\\///g' | xargs git checkout; }; f"
  fb = "!f() { git branch -a | sed 's/^[\\* ] //' | fzf --extended --multi --exit-0 --select-1 --query \"$@\" --preview='git log {}'; }; f"
  fbr = "!f() { git branch -a | sed 's/^[\\* ] //' | fzf --extended --multi --exit-0 --select-1 --preview='git log {}'; }; f"
  discard = checkout --
  discard-all = "!f() { git lsm | xargs git discard; }; f"
  unstage-all = "!f() { git dn --staged | xargs git reset HEAD; }; f"
  unstage = reset HEAD
  branch-name = rev-parse --abbrev-ref HEAD
  browser = "!f() { git remote -v | head -n 1 | sed -e 's/[^:]*:\\([^\\.]*\\).*/\\1/' | xargs -I {} open \"https://github.com/{}/tree/$(git branch-name)\"; }; f"
  cleanup = "!f() { git fetch -p && for branch in `git branch -vv | grep ': gone]' | awk '{print $1}'`; do git branch -D $branch; done; }; f"
  print-default = "!f() { git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@' | xargs printf;  }; f"
  co-default = "!f() { git print-default | xargs git co; }; f"
  untracked = ls-files --others --exclude-standard
  lgb = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset%n' --abbrev-commit --date=relative --branches
  aliases = config --get-regexp alias
  log-commits = "!f() { git --no-pager log --format='%H   %an' -n 10; }; f"
  ls-commit = "!f() { git diff-tree --no-commit-id --name-only -r $1..HEAD; }; f"
  fix-remote-head = remote set-head origin -a
  show-config = "!f() { cat ~/.gitconfig; }; f"
  dn = "diff --name-only"
  conflicts = "!f() { git dn --diff-filter=U; }; f"
  next-conflict = "!f() { git conflicts | head | xargs printf | xargs emacs -chdir $(pwd); }; f"
  jira-number = "!f() { git branch-name | sed 's/-.*//' | xargs printf; }; f"

  ## Requires https://github.com/Netflix-Skunkworks/go-jira
  create-branch = "!f() { git checkout -b $(jira git-branch-desc ${1}); }; f"
  jira-browse = "!f() { jira browse $(git jira-number); }; f"
  jira-desc = "!f() { jira view $(git jira-number); }; f"


[hub]
  host = github.com

[init]
[filter "lfs"]
  smudge = git-lfs smudge -- %f
  process = git-lfs filter-process
  required = true
  clean = git-lfs clean -- %f
